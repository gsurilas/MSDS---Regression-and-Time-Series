##Read Data in

pollution<-read.csv("pollution.csv",header=TRUE)

##Fix pollution matrix since it's importing the last row as a row of NA's which is throwing off 
##calculations

pollution<-pollution[1:60,]

##Check the head to make sure everything is okay
> head(pollution)
  PREC JANT JULYT OVR65 POPN EDUC HOUS DENS NONW WWDRK POOR HC NOX  SO HUMID
1   36   27    71   8.1 3.34 11.4 81.5 3243  8.8  42.6 11.7 21  15  59    59
2   35   23    72  11.1 3.14 11.0 78.8 4281  3.5  50.7 14.4  8  10  39    57
3   44   29    74  10.4 3.21  9.8 81.6 4260  0.8  39.4 12.4  6   6  33    54
4   47   45    79   6.5 3.41 11.1 77.5 3125 27.1  50.2 20.6 18   8  24    56
5   43   35    77   7.6 3.44  9.6 84.6 6441 24.4  43.7 14.3 43  38 206    55
6   53   45    80   7.7 3.45 10.2 66.8 3325 38.5  43.1 25.5 30  32  72    54
      MORT
1  921.870
2  997.875
3  962.354
4  982.291
5 1071.289
6 1030.380

##Name variables for easy manipulation
PREC<-pollution$PREC
JANT<-pollution$JANT
JULYT<-pollution$JULYT
OVR65<-pollution$OVR65
POPN<-pollution$POPN
EDUC<-pollution$EDUC
HOUS<-pollution$HOUS
DENS<-pollution$DENS
NONW<-pollution$NONW
WWDRK<-pollution$WWDRK
POOR<-pollution$POOR
HC<-pollution$HC
NOX<-pollution$NOX
SO<-pollution$SO
HUMID<-pollution$HUMID
MORT<-pollution$MORT

##Get correlation between all predictor variables and the mortality rate. 
##We will input these into the Diagnostic plots for more context


> cor(PREC,MORT)
[1] 0.5094992
> cor(JANT,MORT)
[1] -0.03001998
> cor(JULYT,MORT)
[1] 0.2770137
> cor(OVR65,MORT)
[1] -0.1746019
> cor(POPN,MORT)
[1] 0.3573149
> cor(EDUC,MORT)
[1] -0.5109837
> cor(HOUS,MORT)
[1] -0.4268185
> cor(DENS,MORT)
[1] 0.2654979
> cor(NONW,MORT)
[1] 0.6437473
> cor(WWDRK,MORT)
[1] -0.2848016
> cor(POOR,MORT)
[1] 0.4104873
> cor(HC,MORT)
[1] -0.1772369
> cor(NOX,MORT)
[1] -0.07737851
> cor(SO,MORT)
[1] 0.4258925
> cor(HUMID,MORT)
[1] -0.0884943

##Start diagnostics of all the predictors by plotting all predictors against y-value mortality
##Put correlation in the title of the graph to max the information given by the plot

par(mfrow=c(4,2))
plot(pollution$PREC,pollution$MORT,xlab="PREC",ylab="MORT",main="Correlation of .51")
plot(pollution$JANT,pollution$MORT,xlab="JANT",ylab="MORT",main="Correlation of -.03")
plot(pollution$JULYT,pollution$MORT,xlab="JULYT",ylab="MORT",main="Correlation of .28")
plot(pollution$HC,pollution$MORT,xlab="HC",ylab="MORT",main="Correlation of -.18")
plot(pollution$NOX,pollution$MORT,xlab="NOX",ylab="MORT",main="Correlation of -.08")
plot(pollution$SO,pollution$MORT,xlab="SO",ylab="MORT",main="Correlation of .43")
plot(pollution$HUMID,pollution$MORT,xlab="HUMID",ylab="MORT",main="Correlation of -.09")
par(mfrow=c(4,2))
plot(pollution$NONW,pollution$MORT,xlab="NONW",ylab="MORT",main="Correlation of .64")
plot(pollution$WWDRK,pollution$MORT,xlab="WWDR",ylab="MORT",main="Correlation of -.28")
plot(pollution$POOR,pollution$MORT,xlab="POOR",ylab="MORT",main="Correlation of .41")
plot(pollution$OVR65,pollution$MORT,xlab="OVR65",ylab="MORT",main="Correlation of -.17")
plot(pollution$POPN,pollution$MORT,xlab="POPN",ylab="MORT",main="Correlation of .36")
plot(pollution$EDUC,pollution$MORT,xlab="EDUC",ylab="MORT",main="Correlation of -.51")
plot(pollution$HOUS,pollution$MORT,xlab="HOUS",ylab="MORT",main="Correlation of -.43")
plot(pollution$DENS,pollution$MORT,xlab="DENS",ylab="MORT",main="Correlation of .27")



##Continue Diagnostics by plotting every Predictor against every other predictor to find correlations


> cor(pollution[,1:15])
              PREC        JANT       JULYT       OVR65         POPN       EDUC
PREC   1.000000000  0.09220776  0.50327250  0.10111329  0.263444134 -0.4904252
JANT   0.092207765  1.00000000  0.34628186 -0.39809907 -0.209211721  0.1162838
JULYT  0.503272500  0.34628186  1.00000000 -0.43403951  0.262280134 -0.2385439
OVR65  0.101113286 -0.39809907 -0.43403951  1.00000000 -0.509087354 -0.1388624
POPN   0.263444134 -0.20921172  0.26228013 -0.50908735  1.000000000 -0.3950745
EDUC  -0.490425176  0.11628379 -0.23854394 -0.13886244 -0.395074528  1.0000000
HOUS  -0.490759338  0.01485207 -0.41503247  0.06501017 -0.410590488  0.5522372
DENS  -0.003515152 -0.10005146 -0.06099400  0.16199051 -0.184331973 -0.2438835
NONW   0.413204493  0.45377412  0.57530905 -0.63782101  0.419410064 -0.2087739
WWDRK -0.297291333  0.23799188 -0.02141200 -0.11771469 -0.425722650  0.7031962
POOR   0.506585428  0.56531378  0.61930778 -0.30977083  0.259904274 -0.4033385
HC    -0.531759777  0.35080939 -0.35649416 -0.02048591 -0.388205145  0.2868347
NOX   -0.487320743  0.32101363 -0.33766801 -0.00208188 -0.358428886  0.2244019
SO    -0.106923901 -0.10780991 -0.09934813  0.01724820 -0.004083565 -0.2343459
HUMID -0.077342829  0.06787158 -0.45280915  0.11242622 -0.135740273  0.1764915
             HOUS         DENS         NONW        WWDRK        POOR
PREC  -0.49075934 -0.003515152  0.413204493 -0.297291333  0.50658543
JANT   0.01485207 -0.100051462  0.453774118  0.237991879  0.56531378
JULYT -0.41503247 -0.060994000  0.575309046 -0.021411996  0.61930778
OVR65  0.06501017  0.161990508 -0.637821011 -0.117714691 -0.30977083
POPN  -0.41059049 -0.184331973  0.419410064 -0.425722650  0.25990427
EDUC   0.55223719 -0.243883480 -0.208773945  0.703196235 -0.40333845
HOUS   1.00000000  0.181880938 -0.410334227  0.338745187 -0.68067982
DENS   0.18188094  1.000000000 -0.005678491 -0.031765387 -0.16294541
NONW  -0.41033423 -0.005678491  1.000000000 -0.004387445  0.70491501
WWDRK  0.33874519 -0.031765387 -0.004387445  1.000000000 -0.18516148
POOR  -0.68067982 -0.162945411  0.704915008 -0.185161483  1.00000000
HC     0.38676658  0.120282246 -0.025864740  0.203672306 -0.12978395
NOX    0.34825003  0.165311829  0.018385297  0.160034365 -0.10254386
SO     0.11795180  0.432086418  0.159293022 -0.068461124 -0.09648317
HUMID  0.12190079 -0.124975764 -0.117957115  0.060712564 -0.15222258
               HC         NOX           SO       HUMID
PREC  -0.53175978 -0.48732074 -0.106923901 -0.07734283
JANT   0.35080939  0.32101363 -0.107809912  0.06787158
JULYT -0.35649416 -0.33766801 -0.099348131 -0.45280915
OVR65 -0.02048591 -0.00208188  0.017248201  0.11242622
POPN  -0.38820514 -0.35842889 -0.004083565 -0.13574027
EDUC   0.28683470  0.22440191 -0.234345940  0.17649146
HOUS   0.38676658  0.34825003  0.117951795  0.12190079
DENS   0.12028225  0.16531183  0.432086418 -0.12497576
NONW  -0.02586474  0.01838530  0.159293022 -0.11795711
WWDRK  0.20367231  0.16003436 -0.068461124  0.06071256
POOR  -0.12978395 -0.10254386 -0.096483169 -0.15222258
HC     1.00000000  0.98383998  0.282296257 -0.02017782
NOX    0.98383998  1.00000000  0.409393608 -0.04591410
SO     0.28229626  0.40939361  1.000000000 -0.10255392
HUMID -0.02017782 -0.04591410 -0.102553922  1.00000000




##Create correlation scatterplots of the predictor variables.
> pairs(data[,1:3])
> pairs(data[,4:6])
> pairs(data[,7:10])
> pairs(data[,7:9])
> pairs(data[,10:12])
> pairs(data[,13:15])


##First fit of the model with all variables included

fit1<-lm(MORT~.,data=pollution)
summary(fit1)

Call:
lm(formula = MORT ~ ., data = pollution)

Residuals:
    Min      1Q  Median      3Q     Max 
-68.066 -18.017   0.912  19.224  86.961 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)  1.764e+03  4.373e+02   4.034 0.000215 ***
PREC         1.905e+00  9.237e-01   2.063 0.045071 *  
JANT        -1.938e+00  1.108e+00  -1.748 0.087413 .  
JULYT       -3.100e+00  1.902e+00  -1.630 0.110159    
OVR65       -9.065e+00  8.486e+00  -1.068 0.291230    
POPN        -1.068e+02  6.978e+01  -1.531 0.132952    
EDUC        -1.716e+01  1.186e+01  -1.447 0.155085    
HOUS        -6.511e-01  1.768e+00  -0.368 0.714393    
DENS         3.600e-03  4.027e-03   0.894 0.376147    
NONW         4.460e+00  1.327e+00   3.360 0.001618 ** 
WWDRK       -1.871e-01  1.662e+00  -0.113 0.910883    
POOR        -1.676e-01  3.227e+00  -0.052 0.958807    
HC          -6.721e-01  4.910e-01  -1.369 0.177985    
NOX          1.340e+00  1.006e+00   1.333 0.189506    
SO           8.625e-02  1.475e-01   0.585 0.561745    
HUMID        1.068e-01  1.169e+00   0.091 0.927644    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 34.93 on 44 degrees of freedom
Multiple R-squared:  0.7649,    Adjusted R-squared:  0.6847 
F-statistic: 9.542 on 15 and 44 DF,  p-value: 2.193e-09

##Plot residuals
Residuals<-residuals(fit1)
plot(fit1$fitted,Residuals,xlab="Fitted Values")

##Plot fitted against actual
plot(MORT,col="red")
points(fitted,col="blue")
legend(20,1100,legend=c("Mortality Rates", "Fitted Mortality Rates"),pch=c(16,16),col=c("red","blue"))

##QQ Plot to check for Normality
qqnorm(Residuals)

##Look at VIF factors
print(diag(solve(cor(pollution[,1:15]))))
      PREC       JANT      JULYT      OVR65       POPN       EDUC       HOUS 
  4.113888   6.143551   3.967774   7.470045   4.307618   4.860538   3.994781 
      DENS       NONW      WWDRK       POOR         HC        NOX         SO 
  1.658281   6.779599   2.841582   8.717068  98.639935 104.982405   4.228929 
     HUMID 
  1.907092 


##Perform Forwards Stepwise Regression. Install leaps first
library(leaps)
xx<-pollution[,1:15]
xx<-as.matrix(xx)
forward<-regsubsets(xx,MORT,method='forward',nvmax=15)
forward1<-summary(forward)
forward1$bic
plot(forward1$bic)

##Perform Backwards Stepwise Regression
backward<-regsubsets(xx,MORT,method='backward',nvmax=15)
backward1<-summary(backward)
backward$bic
plot(backward1$bic)

##Perform Hybrid Stepwise Regression
out.null<-lm(MORT~1,data=pollution)
full<-formula(lm(MORT~.,pollution))
out.full<-lm(MORT~.,pollution)
out.both=step(out.full,scope=list(lower=~1,upper=full),direction="both",data=pollution,trace=FALSE,k=log(60))


#Look at the forward model

forward<-lm(MORT~PREC+JANT+EDUC+NONW+SO)
summary(forward)

Call:
lm(formula = MORT ~ PREC + JANT + EDUC + NONW + SO)

Residuals:
    Min      1Q  Median      3Q     Max 
-84.061 -22.646   0.573  18.394  99.844 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept) 1016.42980   85.72619  11.857  < 2e-16 ***
PREC           1.48827    0.58998   2.523  0.01463 *  
JANT          -1.62292    0.52036  -3.119  0.00291 ** 
EDUC         -12.76367    6.56786  -1.943  0.05719 .  
NONW           4.06613    0.65516   6.206 7.95e-08 ***
SO             0.28389    0.07915   3.587  0.00072 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 34.6 on 54 degrees of freedom
Multiple R-squared:  0.7169,    Adjusted R-squared:  0.6907 
F-statistic: 27.35 on 5 and 54 DF,  p-value: 1.116e-13

#Plot the fitted, residuals and qq-plot

fitted<-fitted(forward)
plot(MORT,col="red")
points(fitted,col="blue")
legend(20,1100,legend=c("Mortality Rates", "Fitted Mortality Rates"),pch=c(16,16),col=c("red","blue"))
Residuals<-residuals(forward)
plot(forward$fitted,Residuals,xlab="Fitted Values")
qqnorm(Residuals)

##Look at the backwards model

> backward<-lm(MORT~JANT+EDUC+NONW+HC+NOX)
> summary(backward)

Call:
lm(formula = MORT ~ JANT + EDUC + NONW + HC + NOX)

Residuals:
    Min      1Q  Median      3Q     Max 
-83.176 -16.126  -1.546  21.054  85.975 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept) 1145.1971    70.2395  16.304  < 2e-16 ***
JANT          -1.5629     0.5937  -2.633  0.01103 *  
EDUC         -19.3694     6.1793  -3.135  0.00278 ** 
NONW           4.4613     0.6531   6.831 7.75e-09 ***
HC            -0.9844     0.3308  -2.976  0.00436 ** 
NOX            1.9923     0.6341   3.142  0.00272 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 35.78 on 54 degrees of freedom
Multiple R-squared:  0.6972,    Adjusted R-squared:  0.6691 
F-statistic: 24.87 on 5 and 54 DF,  p-value: 6.60	4e-13

##Plot the fitted, residuals and qq plot

fitted<-fitted(backward)
Residuals<-residuals(backward)
plot(MORT,col="red")
points(fitted,col="blue")
legend(20,1100,legend=c("Mortality Rates", "Fitted Mortality Rates"),pch=c(16,16),col=c("red","blue"))
plot(backward$fitted,Residuals,xlab="Fitted Values")
qqnorm(Residuals)


##Look at the VIFs for the forwards and backwards model

##Forward model

print(diag(solve(cor(pollution[,c(1,2,6,9,14)]))))
    PREC     JANT     EDUC     NONW       SO 
1.710520 1.380206 1.519338 1.683930 1.240766 

##Backwards Model
print(diag(solve(cor(pollution[,c(2,6,9,12,13)]))))
     JANT      EDUC      NONW        HC       NOX 
 1.679619  1.257332  1.564393 42.650764 39.781688 





